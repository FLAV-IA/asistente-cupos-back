name: Deploy to Production

on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

jobs:
  deploy-prod:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    env:
      CHATGPT_APIKEY: ${{ secrets.CHATGPT_APIKEY }}
      MYSQL_PORT: 3306
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: flav-ia
      DB_USERNAME: ${{ secrets.DB_USERNAME }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Pull Docker image
        run: |
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/$REPO_LOWER/app
          echo "Pulling image: $IMAGE_NAME"
          docker pull $IMAGE_NAME:${{ github.sha }} || docker pull $IMAGE_NAME:latest

      - name: Set up Docker Compose and Start Containers
        run: |
          echo "Starting Docker Compose with MySQL and Application..."
          docker compose -f docker-compose.yml up -d

      - name: Wait for the database to be ready
        run: |
          echo "Esperando por MySQL..."
          DB_CONTAINER=$(docker ps -qf "name=db")
          for i in {1..20}; do
            if docker exec $DB_CONTAINER mysqladmin -u "$DB_USERNAME" --password="$DB_PASSWORD" ping --silent; then
              echo "✅ MySQL está vivo!"
              exit 0
            fi
            echo "⏳ sigue buscando MySQL... ($i/20)"
            sleep 5
          done
          
          echo "❌ MySQL no vivió. Logs del container:"
          docker logs $DB_CONTAINER
          exit 1

      - name: Deploy to Render
        run: |
          curl --request POST \
          --url https://api.render.com/v1/services/srv-d010j5buibrs73et51v0/deploys \
          --header 'accept: application/json' \
          --header 'authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
          --header 'content-type: application/json' \
          --data '
            {
              "clearCache": "clear"
            }'
