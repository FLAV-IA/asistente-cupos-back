name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    env:
      CHATGPT_APIKEY: ${{ secrets.CHATGPT_APIKEY }}
      MYSQL_PORT: 3306
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: flav-ia
      DB_USERNAME: ${{ secrets.DB_USERNAME }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image (SHA and latest tags)
        run: |
            REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
            IMAGE_NAME=ghcr.io/$REPO_LOWER/app
            echo "Using image name: $IMAGE_NAME"
            docker build -t $IMAGE_NAME:${{ github.sha }} -t $IMAGE_NAME:latest .
            docker push $IMAGE_NAME:${{ github.sha }}
            docker push $IMAGE_NAME:latest

      - name: Set up Docker Compose and Start Containers
        run: |
          echo "Starting Docker Compose with MySQL and Application..."
          docker-compose -f docker-compose.yml up -d

      - name: Wait for the database to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          until docker exec -it $(docker ps -qf "name=db") mysqladmin -u $DB_USERNAME --password=$DB_PASSWORD ping --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done

#      - name: Deploy to Render
#        run: |
#          curl -X POST \
#            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
#            -d "service_id=YOUR_SERVICE_ID&branch=main" \
#            https://api.render.com/deploy
