plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'idea'
    id 'org.sonarqube' version '4.4.1.3373'
    id 'jacoco'
}

group = 'com.edu'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven {
        name = 'Central Portal Snapshots'
        url = 'https://central.sonatype.com/repository/maven-snapshots/'
    }
}

def coberturaExcluida = [
        '**/config/**',
        '**/dto/**',
        '**/mapper/**',
        '**/repository/**',
        '**/prompt/optimizado/**',
        '**/JsonConverter.class',
        '**/PeticionInscripcion.class',
        '**/PeticionPorMateriaPriorizada.class',
        '**/domain/comision.class',
        '**/domain/Materia.class',
        '**/domain/cursada.class',
        '**/domain/asignacion/**',
        '**/domain/sugerencia/**',
        '**/excepcion/opta/**'
]

sonar {
    properties {
        property "sonar.projectKey", "FLAV-IA_asistente-cupos-back"
        property "sonar.organization", "flav-ia-1"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectName", "FLAV-IA"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.gradle.skipCompile", "true"
        property "sonar.coverage.exclusions", coberturaExcluida.join(',')
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('sonar') {
    dependsOn tasks.named('jacocoTestReport')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.opencsv:opencsv:5.8'
    implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-M6")
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.zaxxer:HikariCP'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'org.optaplanner:optaplanner-core:9.44.0.Final'
    implementation 'org.optaplanner:optaplanner-spring-boot-starter:9.44.0.Final'
    testImplementation 'org.optaplanner:optaplanner-test:9.44.0.Final'
    testImplementation 'org.testcontainers:mysql:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    implementation 'com.mysql:mysql-connector-j:8.3.0'
    constraints {
        implementation('org.apache.commons:commons-compress:1.27.1') {
            because 'Fixes CVE-2024-26308 y CVE-2024-25710 en testcontainers'
        }
    }
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-core'
}

tasks.register('setupCodeStyle', Copy) {
    group = 'IDE'
    description = 'Configura el estilo de c√≥digo en .idea/'

    from file('config/idea/codeStyles')
    into file('.idea/codeStyles')
    include 'Project.xml'

    doFirst {
        mkdir '.idea/codeStyles'
    }
}

tasks.named('idea') {
    dependsOn 'setupCodeStyle'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }

    classDirectories.setFrom(
            fileTree(
                    dir: layout.buildDirectory.dir("classes/java/main").get().asFile,
                    excludes: coberturaExcluida
            )
    )
}